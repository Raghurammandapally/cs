120 "CS 367, Fall 2014 Programming Assignment 2" "p2" "gradeReport.html"
0 0 g "General Issues"
  1 120 gx "No work submitted"
  1 120 gu "File contents unreadable"
  1 6 ge "Extra file(s) submitted (e.g., *.class) [-1/extra file]"
  1 6 gdb "Debugging statements printed - remove from future programs before submitting"
0 25 sll "SimpleLinkedList class" "Look at 'Running Tests' section of Output.txt. Make deductions for those issues printed."
  1 25 sll1 "Does not compile due to major or many minor errors"
  1 25 sll6 "Does not use DblListnode"
  1 15 sll11 "List not Doubly linked"
  1 10 sll12 "Generics not correctly used" 
  1 6 sll2 "Does not compile due to minor error(s), which we fixed [-2/error]"
  1 8 sll3 "Crashed due to a minor bug, which we fixed [-2/bug]"
  1 3 sll4 "File name incorrect - should be SimpleLinkedList.java"
  1 3 sll5 "Class name doesn't match file name - should be SimpleLinkedList"
  1 1 sll10 "Constructor missing/incorrect"
  1 3 slla1 "void add(E item)"
    2 3 slla11 "Not implemented"
    2 2 slla12 "Does not correctly add to the end of the list"
  1 4 slla2 "void add(int pos,E item)"
    2 4 slla21 "Not implemented"
    2 2 slla22 "Does not correctly add to the list"
    2 1 slla23 "Insert off by one"
    2 1 slla24 "Does not throw IlligalArgumentException for invalid pos"
  1 3  sllc "boolean contains(E item)"
    2 3 sllc1 "Not implemented"
    2 2 sllc2 "incorrect"
    2 1 sllc3 "Does not throw IlligalArgumentException for invalid pos"
  1 5 sllg "E get(int pos)"        
    2 5 sllg1 "Not implemented"
    2 3 sllg2 "Does not return item in pos"
    2 1 sllg3 "Does not throw IlligalArgumentException for invalid pos"
  1 2 slli "boolean isEmpty()"
    2 2 slli1 "Not Implemented"
    2 1 slli2 "Incorrect"
  1 5 sllr "E remove(int pos)"
    2 5 sllr1 "Not implemented"
    2 3 sllr2 "Does not remove item in pos"
    2 1 sllr3 "Does not throw IlligalArgumentException for invalid pos"
    2 2 sllr4 "List invalidated after remove "
  1 3 slls "int size()"
    2 3 slls1 "Not Implemented"
    2 1 slls2 "Incorrect"
0 10 twe "Tweet class" "Look at 'Running Tests' section of Output.txt. Make deductions for those issues printed."
  1 10 twe1 "Does not compile due to major or many minor errors"
  1 6 twe2 "Does not compile due to minor error(s), which we fixed [-2/error]"
  1 8 twe3 "Crashed due to a minor bug, which we fixed [-2/bug]"
  1 3 twe4 "File name incorrect - should be Tweet.java"
  1 3 twe5 "Class name doesn't match file name - should be Tweet"
  1 3 twe6 "Does not throw TweetTooLongException for invalid tweets"
  1 2 twem "String getMessage()"
    2 2 twem1 "Not Implemented"
    2 1 twem2 "Incorrect"
  1 2 twet "String getTime()"
    2 2 twet1 "Not Implemented"
    2 1 twet2 "Incorrect"
  1 2 tweu "String getUser()"
    2 2 tweu1 "Not Implemented"
    2 1 tweu2 "Incorrect"
  1 4 twep "void print()"
    2 4 twep1 "Not Implemented"
    2 3 twep2 "Formatting not <TIME> <USER>:<MESSAGE>"
0 5 ttl "TweetTooLongException class" "Look at 'Running Tests' section of Output.txt. Make deductions for those issues printed."
  1 3 ttl1 "File name incorrect - should be TweetTooLongException.java"
  1 3 ttl2 "Class name doesn't match file name - should be TweetTooLongException"
  1 5 ttl3 "Not Implemented"
  1 2 ttl4 "Incorrect"
0 20 tim "Timeline class" "Look at 'Running Tests' section of Output.txt. Make deductions for those issues printed."
  1 20 tim1 "Does not compile due to major or many minor errors"
  1 20 tim6 "Does not use SimpleLinkedList"
  1 6 tim2 "Does not compile due to minor error(s), which we fixed [-2/error]"
  1 8 tim3 "Crashed due to a minor bug, which we fixed [-2/bug]"
  1 3 tim4 "File name incorrect - should be Timeline.java"
  1 3 tim5 "Class name doesn't match file name - should be Timeline"
  1 2 tim10 "Constructor missing/incorrect"
  1 4 tima1 "void add(Tweet tweet)"
    2 4 tima11 "Not implemented"
    2 3 tima12 "User not added to list"
    2 2 tima13 "Time order not correctly enforced"
    2 1 tima14 "User not added to front of list"
    2 1 tima15 "User not added to end of list"
  1 2 tima2 "void add(List<Tweet> tweet)"
    2 2 tima21 "Not implemented"
    2 1 tima22 "Incorrect"
  1 4 timr "void remove(String user)"
    2 4 timr1 "Not implemented"
    2 3 timr2 "Does not remove any of user's tweet's"
    2 2 timr3 "Does not remove some of user's tweet's"
  1 2 timp1 "void print()"
    2 2 timp11 "Not implemented"
    2 1 timp12 "Incorrect"
  1 4 timp2 "void print(int time)"
    2 4 timp21 "Not implemented"
    2 2 "Does not print tweets less than int time"
  1 4 tims "Timeline search(String Keyword)"
    2 4 tims1 "Not implemented"
    2 2 tims2 "Does not correctly find tweets with keyword"
    2 2 tims3 "uses .equals instead of .contains"
    2 1 tims4 "Miss some tweets"
0 25 twi "Twitter class" "Look at 'Student's Output' section of Output.txt and compare it with OutputSolution.txt"
  1 25 twix1 "Does not compile due to major or many minor errors"
  1 20 twix2 "Program crashed immediately or failed to run"
  1 15 twix3 "Does not compile due to minor error(s), which we fixed [-3/error]"
  1 10 twix4 "Crashed due to a minor bug, which we fixed [-2/bug]"
  1 5 twix6 "Program failed to complete with larger input files"
  1 3 twifn "File name incorrect - should be Twitter.java"
  1 3 twicn "Class name doesn't match file name - should be Twitter"
  1 4 twiout1 "Output format not as specified" "see standards below; add specific comment; exclude error messages for steps 1 and 2 or main method"
  1 3 twiout2 "Output not Case Sensitive"
  1 1 twiout3 "Minor output format problems (e.g., a few extra commas or extra spaces)"
  1 5 twiout4 "Error messages not descriptive" "deduct proportionally"
  1 5 twiout5 "Does not print "Invalid Command" for invalid input"
  1 2 twi1a "Step 1: check command-line args"
    2 2 twi1ax "Didn't use command-line args"
    2 1 twi1a3 "No error message"
  1 2 twi2i "Step 2: check input files"
    2 2 twi2ix "Didn't use input files"
    2 2 twi2ih "Filenames hardcoded"
    2 1 twi2i1 "Didn't check input files exist (or check is incorrect)"
    2 1 twi2i4 "Didn't exit cleanly if file didn't exist or wasn't readable" "For example, program crashes"
  1 3 twi3l "Step 3: load input files"
    2 3 twi3lx "No code for loading datafiles"
    2 3 twi3l1 "Datafiles loaded incorrectly" "-3 if there are major problems with loading, -1 if minor problem"
    2 1 twi3l2 "Format assumed for datafiles is incorrect, but otherwise loads correctly"
  1 3 clu "Command option 'list users'"
    2 3 clu1 "No code for this option"
    2 2 clu2 "Incorrect users"
    2 2 clu3 "Users not in input file order"
  1 3 clf "Command option 'list following'"
    2 3 clf1 "No code for this option"
    2 2 clf2 "Incorrect users"
    2 2 clf3 "Users not in input file order"
  1 3 cfu "Command option 'follow user'"
    2 3 cfu1 "No code for this option"
    2 2 cfu2 "Error message not printed for invalid user"
    2 2 cfu3 "Does not check if already following" 
  1 3 cuu "Command option 'unfollow user'"
    2 3 cuu1 "No code for this option"
    2 2 cuu2 "Error message not printed for invalid user"
    2 2 cuu3 "Does not check if following"
  1 2 css "Command option 'search string'"
    2 2 css1 "No code for this option"
    2 1 css2 "Incorrect"
  1 2 cp1 "Command option 'print'"
    2 2 cp11 "No code for this option"
    2 1 cp12 "Incorrect"
  1 2 cp2 "Command option 'print int'"
    2 2 cp21 "No code for this option"
    2 1 cp22 "Incorrect"
0 15 d "Program design" "View the student's code, make deductions as necessary."
  1 5 d1 "ListADT or DblListNode class modified"
  1 4 d2 "Additional public methods/constructors added to classes" "don't deduct for using a toString method, as long as it's not used in MovieFlix"
  1 4 d3 "Only Timeline should manage SimpleLinkedList "
  1 3 d4 "Twitter has code that should be done by Timeline"
  1 3 d5 "Twitter should do file input "
  1 3 d8 "Excessive/unnecessary additional classes"
  1 4 d9 "All data members should be <b>private</b> for this assignment and should not be accessed directly outside the class they were declared"
0 10 s "Style" "View the student's code, make deductions as necessary."
  1 1 s1 "Use symbolic constants where appropriate"
  1 2 s2 "Use one of the standard forms for placing braces"
  1 1 s3 "Use more vertical whitespace (blank lines)"
  1 1 s4 "Use more horizontal whitespace (spaces/tabs within a line)"
  1 1 s5 "Use shorter line lengths"
  1 2 s6 "Indent to show level of nesting"
  1 2 s7 "Follow naming conventions"
    2 1 s7s1 "Needlessly long variable names"
    2 1 s7s2 "Needlessly short variable names (c,i,g, etc.)"
    2 1 s7s3 "Use descriptive names"
0 10 c "Commenting" "View the student's code, make deductions as necessary."
  1 10 cx "Trivial or no comments - review commenting guide"
  1 1 cl "Put longer comments above a line of code, not at the end of it"
  1 1 cj "Use javadoc style /** ... */ comments instead of // comments for headers"
  1 1 cF "Missing/incomplete FILE header comments - put at beginning of every file"
  1 1 cC "Missing/incomplete CLASS header comments - every class should have one"
  1 5 cM "Missing/incomplete METHOD header comments - every method should have one"
    2 5 cMs2 "Some method headers don't correctly describe their purposes" "deduct proportionally"
    2 1 cMs3 "Method headers should explain their arguments, not just list them"
  1 1 cV "Missing/incomplete VARIABLE declaration comments - list purpose and range of legal values for each non-trivial variable"
  1 2 cm "Missing/incomplete comments within methods"
    2 1 cms1 "List main steps of method's algorithm when they're not obvious"
    2 1 cms2 "Explain confusing/convoluted code"
    2 1 cms3 "Avoid excessive commenting"
