int x;
struct x {
  bool y;
  struct X x;
};
int max(int a) {
  //declList
  //stmtList
}
int max(int a, bool b) {
  //declList
  int x;
  int y;
  //stmtList 
  //***NOTE: ()'s surround assignments to illustrate right-assiciativity
  x = y;
  x = y = z = a = b;
  a++; a.b++; b.a--;
  cin >> x.y.z.abc;
  cin >> x;
  cout << x = y;
  if(hello==world){println("yah");}
  if(hello==world){println("yah");}else{doSomethingDifferent();}
  while(dog){cat();}
  return(a == b*c);
  return;
  xyz(abc, 123, null);
  x = y + z;
  x = y - z;
  x = y * z;
  x = y / z;
  x = !z;
  x = y && z;
  x = y || z;
  x = y == z;
  x = y != z;
  x = y < z;
  x = y > z;
  x = y <= z;
  x = y >= z;
  x = -y;
  x = y.z;
  x = 1;
  x = true;
  x = false;
  x = (y + z);
  x = max(a,b,c);
  x = min();
  x = y * z - -x + 3 / 4 && !c || y - x.y + f(1);
}
//*******************************
// GIVEN SAMPLE INPUT
//*******************************
int max() {
  if (b == -1) { x = 4+3*5-y; while (c) { y = y*2+x; } } else { x = 0; }
  cin >> x.yz.abc;
  cin >> x.yz;
  cin >> x;
}
